-- Diagn√≥stico r√°pido para erro de inser√ß√£o de funcion√°rios
-- Execute este SQL no dashboard do Supabase

-- 1. Verificar se a tabela existe e sua estrutura
SELECT 
  'Verifica√ß√£o da tabela funcionarios' as teste,
  CASE 
    WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'funcionarios') 
    THEN '‚úÖ Tabela existe'
    ELSE '‚ùå Tabela N√ÉO existe'
  END as status;

-- 2. Verificar se RLS est√° habilitado
SELECT 
  'Verifica√ß√£o RLS' as teste,
  CASE 
    WHEN EXISTS (
      SELECT 1 FROM pg_tables 
      WHERE tablename = 'funcionarios' AND rowsecurity = true
    ) THEN '‚úÖ RLS habilitado'
    ELSE '‚ùå RLS desabilitado'
  END as status;

-- 3. Verificar pol√≠ticas existentes
SELECT 
  'Pol√≠ticas RLS' as teste,
  COUNT(*) as total_politicas,
  STRING_AGG(policyname, ', ') as politicas
FROM pg_policies 
WHERE tablename = 'funcionarios';

-- 4. Verificar usu√°rio atual
SELECT 
  'Usu√°rio atual' as teste,
  auth.uid() as user_id,
  CASE 
    WHEN auth.uid() IS NULL THEN '‚ùå N√£o autenticado'
    ELSE '‚úÖ Autenticado'
  END as status;

-- 5. Verificar se √© ADMIN
SELECT 
  'Verifica√ß√£o ADMIN' as teste,
  CASE 
    WHEN auth.uid() IS NULL THEN '‚ùå N√£o autenticado'
    WHEN EXISTS (
      SELECT 1 FROM public.profiles 
      WHERE user_id = auth.uid() 
      AND papel = 'ADMIN'
    ) THEN '‚úÖ √â ADMIN'
    ELSE '‚ùå N√ÉO √© ADMIN'
  END as status;

-- 6. Verificar perfil do usu√°rio atual
SELECT 
  'Perfil do usu√°rio' as teste,
  p.nome,
  p.papel,
  p.ativo,
  CASE WHEN p.user_id = auth.uid() THEN 'üë§ Atual' ELSE '' END as status
FROM public.profiles p
WHERE p.user_id = auth.uid();

-- 7. Testar SELECT na tabela funcionarios
SELECT 
  'Teste SELECT' as teste,
  CASE 
    WHEN EXISTS (SELECT 1 FROM public.funcionarios LIMIT 1) 
    THEN '‚úÖ Pode fazer SELECT'
    ELSE '‚ùå N√ÉO pode fazer SELECT'
  END as status;

-- 8. Verificar se a fun√ß√£o is_admin existe
SELECT 
  'Fun√ß√£o is_admin' as teste,
  CASE 
    WHEN EXISTS (
      SELECT 1 FROM information_schema.routines 
      WHERE routine_name = 'is_admin' 
      AND routine_schema = 'public'
    ) THEN '‚úÖ Fun√ß√£o existe'
    ELSE '‚ùå Fun√ß√£o N√ÉO existe'
  END as status;

-- 9. Testar a fun√ß√£o is_admin
SELECT 
  'Teste is_admin()' as teste,
  CASE 
    WHEN is_admin() THEN '‚úÖ Retorna TRUE'
    ELSE '‚ùå Retorna FALSE'
  END as status;
